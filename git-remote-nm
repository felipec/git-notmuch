#!/usr/bin/env ruby

# Copyright (c) 2023 Felipe Contreras

require 'notmuch'
require 'fileutils'

def wr(text)
  print text
end

def wr_l(line=nil)
  puts line
end

def wr_data(data)
  wr_l 'data %d' % data.length
  wr data
end

def rd_l
  $stdin.readline(chomp: true)
end

def rd_s(*args)
  rd_l.split(' ', *args)
end

def rd_data
  _, data_len = rd_s
  data = $stdin.read(data_len.to_i)
end

def rd_cmds(mark='')
  $stdin.each(chomp: true) do |line|
    break if line == mark
    cmd, *args = line.split(' ')
    yield cmd, args
  end
end

def flush
  $stdout.flush
end

def wr_capabilities
  wr <<~EOF
  import
  export
  refspec refs/heads/*:refs/notmuch/*

  EOF
end

def wr_list
  attrs = ''
  attrs += 'unchanged' if $lastmod == get_lastmod

  wr <<~EOF
  ? refs/heads/master #{attrs}

  EOF
end

def rd_mark
  _, mark = rd_s
  mark
end

def get_lastmod
  # TODO: implement `revision` in Notmuch::Database
  _, _, lastmod = %x[notmuch count --lastmod].chomp.split("\t")
  lastmod.to_i
end

def store_lastmod
  File.write(File.join($nm_dir, 'lastmod'), get_lastmod)
end

def db_write
  db = Notmuch::Database.new($url, mode: Notmuch::MODE_READ_WRITE)
  begin
    db.begin_atomic
    yield db
    db.end_atomic
  ensure
    db.close
  end
end

def decode_filename(str)
  str.gsub('%47', '/')
end

def encode_filename(str)
  str.gsub(%r[/(?=/)|\A/|/\Z], '%47')
end

def wr_export
  $blobs = {}

  rd_cmds('done') do |cmd, args|
    case cmd
    when 'blob'
      mark = rd_mark
      $blobs[mark] = rd_data
      rd_l # nl
    when 'commit'
      mark = rd_mark
      rd_l # author
      rd_l # committer
      rd_data

      db_write do |db|
        loop do
          _, _, mark, path = rd_s
          break unless path
          id = decode_filename(path.delete_suffix('/tags'))
          msg = db.find_message(id)
          # TODO: implement `tags=` in Notmuch::Message
          cur_tags = msg.tags.to_a
          new_tags = $blobs[mark].split("\n")
          (new_tags - cur_tags).each { |e| msg.add_tag(e) }
          (cur_tags - new_tags).each { |e| msg.remove_tag(e) }
        end
      end

      wr_l 'ok refs/heads/master'
    end
  end

  store_lastmod
  wr_l
end

def wr_import(ref)
  wr <<~EOF
  feature done
  commit refs/notmuch/master
  mark :1
  committer #{$ident}
  data 0
  EOF
  wr_l 'from refs/notmuch/master^0' if $lastmod

  wr_l 'deleteall'

  $db.query('').search_messages.each do |msg|
    wr_l 'M 644 inline %s/tags' % encode_filename(msg.message_id)
    wr_data(msg.tags.to_a.join("\n") + "\n")
  end

  wr_l
  store_lastmod
  wr_l 'done'
  flush
end

$alias, $url = ARGV
$db = Notmuch::Database.new($url)
$ident = %x[git var GIT_COMMITTER_IDENT].chomp
$git_dir = ENV['GIT_DIR']
$nm_dir = File.join($git_dir, 'notmuch')

FileUtils.mkdir_p($nm_dir)

begin
  $lastmod = File.read(File.join($nm_dir, 'lastmod')).to_i
rescue Errno::ENOENT
end

$initial = !system(*%w[git rev-parse --verify --quiet refs/notmuch/master])

rd_cmds do |cmd, args|
  send('wr_' + cmd, *args)
  flush
end
